{
  "info": {
    "name": "Google Drive Clone API",
    "description": "Complete API collection for Google Drive Clone with authentication, file management, and folder operations",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:10000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "folderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "fileId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "health"
          ]
        },
        "description": "Check if the server is running"
      },
      "response": []
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    console.log('Auth token saved:', response.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    console.log('Auth token saved:', response.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login with existing user credentials"
          },
          "response": []
        },
        {
          "name": "Get User Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "profile"
              ]
            },
            "description": "Get current user profile information"
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"updatedusername\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "profile"
              ]
            },
            "description": "Update user profile information"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Folders",
      "item": [
        {
          "name": "Get Root Folder Contents",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.folder && response.folder.id) {",
                  "        pm.collectionVariables.set('folderId', response.folder.id);",
                  "        console.log('Root folder ID saved:', response.folder.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/folders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "folders"
              ]
            },
            "description": "Get contents of root folder (My Drive)"
          },
          "response": []
        },
        {
          "name": "Get Specific Folder Contents",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/folders/{{folderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "folders",
                "{{folderId}}"
              ]
            },
            "description": "Get contents of a specific folder by ID"
          },
          "response": []
        },
        {
          "name": "Create New Folder",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.folder && response.folder.id) {",
                  "        pm.collectionVariables.set('folderId', response.folder.id);",
                  "        console.log('New folder ID saved:', response.folder.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Folder\",\n  \"parentId\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/folders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "folders"
              ]
            },
            "description": "Create a new folder. Use null for parentId to create in root."
          },
          "response": []
        },
        {
          "name": "Get Folder Breadcrumbs",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/folders/breadcrumbs/{{folderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "folders",
                "breadcrumbs",
                "{{folderId}}"
              ]
            },
            "description": "Get breadcrumb navigation path for a folder"
          },
          "response": []
        },
        {
          "name": "Rename Folder",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Renamed Folder\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/folders/rename/{{folderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "folders",
                "rename",
                "{{folderId}}"
              ]
            },
            "description": "Rename an existing folder"
          },
          "response": []
        },
        {
          "name": "Move Folder",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"parentId\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/folders/move/{{folderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "folders",
                "move",
                "{{folderId}}"
              ]
            },
            "description": "Move folder to a different parent folder. Use null to move to root."
          },
          "response": []
        },
        {
          "name": "Delete Folder",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/folders/delete/{{folderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "folders",
                "delete",
                "{{folderId}}"
              ]
            },
            "description": "Delete a folder and all its contents"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Files",
      "item": [
        {
          "name": "Upload File",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.file && response.file.id) {",
                  "        pm.collectionVariables.set('fileId', response.file.id);",
                  "        console.log('File ID saved:', response.file.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "folderId",
                  "value": "{{folderId}}",
                  "type": "text",
                  "description": "ID of the folder to upload to (optional, defaults to root)"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/files/upload",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "files",
                "upload"
              ]
            },
            "description": "Upload a file to the specified folder. Select a file in the 'file' field."
          },
          "response": []
        },
        {
          "name": "Get File Info",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/files/{{fileId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "files",
                "{{fileId}}"
              ]
            },
            "description": "Get information about a specific file"
          },
          "response": []
        },
        {
          "name": "Download File",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/files/download/{{fileId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "files",
                "download",
                "{{fileId}}"
              ]
            },
            "description": "Download a file by its ID"
          },
          "response": []
        },
        {
          "name": "Search Files",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/files/search?query=test&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "files",
                "search"
              ],
              "query": [
                {
                  "key": "query",
                  "value": "test",
                  "description": "Search term for file names"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Maximum number of results (optional)"
                },
                {
                  "key": "folderId",
                  "value": "",
                  "description": "Search within specific folder (optional)",
                  "disabled": true
                }
              ]
            },
            "description": "Search for files by name"
          },
          "response": []
        },
        {
          "name": "Rename File",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"renamed-file.txt\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/files/rename/{{fileId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "files",
                "rename",
                "{{fileId}}"
              ]
            },
            "description": "Rename an existing file"
          },
          "response": []
        },
        {
          "name": "Move File",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"folderId\": \"{{folderId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/files/move/{{fileId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "files",
                "move",
                "{{fileId}}"
              ]
            },
            "description": "Move file to a different folder"
          },
          "response": []
        },
        {
          "name": "Delete File",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/files/delete/{{fileId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "files",
                "delete",
                "{{fileId}}"
              ]
            },
            "description": "Delete a file permanently"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set authorization header if token exists",
          "const token = pm.collectionVariables.get('authToken');",
          "if (token && !pm.request.headers.has('Authorization')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: `Bearer ${token}`",
          "    });",
          "}"
        ]
      }
    }
  ]
}